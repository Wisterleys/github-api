{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/input-search/input-search.component.ts","./src/app/components/input-search/input-search.component.html","./src/app/pages/search/search.component.ts","./src/app/pages/search/search.component.html","./src/app/pages/user-detail/user-detail.component.html","./src/app/pages/user-detail/user-detail.component.ts","./src/app/services/core/service-base.service.ts","./src/app/services/github.service.ts","./src/app/services/interceptors/token.interceptor.ts","./src/app/shared/storage/auth.storage.ts","./src/app/utils/cryptography/cryptography.util.ts","./src/app/utils/header.util.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { UserDetailComponent } from './pages/user-detail/user-detail.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '',component:SearchComponent},\r\n  { path: 'detail', component:UserDetailComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'searchdev';\r\n  \r\n}\r\n","<router-outlet></router-outlet>","import { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { TokenInterceptor } from './services/interceptors/token.interceptor';\r\nimport { SearchComponent } from './pages/search/search.component';\r\nimport { UserDetailComponent } from './pages/user-detail/user-detail.component';\r\nimport { InputSearchComponent } from './components/input-search/input-search.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchComponent,\r\n    UserDetailComponent,\r\n    InputSearchComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    MatCardModule\r\n  ],\r\n \r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n    { provide: LOCALE_ID, useValue: 'pt-BR' },\r\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 3000,panelClass: ['danger-snackbar']}}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, EventEmitter, Output, Input, OnChanges} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-input-search',\r\n  templateUrl: './input-search.component.html',\r\n  styleUrls: ['./input-search.component.scss']\r\n})\r\nexport class InputSearchComponent implements OnChanges{\r\n  @Output() words: EventEmitter<string> = new EventEmitter();\r\n  @Input() isLoading:boolean=false;\r\n  @Input() hasButton:boolean=true;\r\n  searchValueInput!: string | null;\r\n\r\n  \r\n  ngOnChanges(){\r\n    this.isLoading;\r\n  }\r\n  valueInputData(){\r\n    if(this.searchValueInput!=null&&this.searchValueInput.length>2&&!this.hasButton)this.words.emit(this.searchValueInput);\r\n  }\r\n  onGetWords(): void {\r\n    if(this.searchValueInput!=null)this.words.emit(this.searchValueInput);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"input-group\">\r\n        <div class=\"search-icon\">\r\n            <mat-icon>search</mat-icon>\r\n        </div>\r\n        <input type=\"text\" placeholder=\"Search\" [(ngModel)]=\"searchValueInput\" (input)=\"valueInputData()\"/>\r\n    </div>\r\n    <button mat-raised-button color=\"primary\" class=\"custom-button\" (click)=\"onGetWords()\" *ngIf=\"!isLoading&&hasButton\">Search</button>\r\n    <mat-spinner *ngIf=\"isLoading&&hasButton\"></mat-spinner>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { GitHubService } from 'src/app/services/github.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent {\r\n  isLoading:boolean=false;\r\n  \r\n  constructor(\r\n    private router:Router,\r\n    private snackBar: MatSnackBar,\r\n    private githubService:GitHubService\r\n  ){}\r\n\r\n  onGetWords(value:string){\r\n    this.isLoading=true;\r\n   \r\n    forkJoin({\r\n      user:this.githubService.getUsers(value),\r\n      repos:this.githubService.getRepos(value)\r\n    }).subscribe({\r\n      next:(value:any)=>{\r\n        this.githubService.user = value.user;\r\n        this.githubService.repos = value.repos;\r\n        this.isLoading=false;\r\n        this.router.navigate(['/detail']);\r\n      },\r\n      error:(err:any)=>{\r\n        this.openSnackbar(`Ops! usuário ${value} não encontrado`);\r\n        this.isLoading=false;\r\n      }\r\n\r\n    })\r\n    \r\n    \r\n  }\r\n  openSnackbar(value:string){\r\n    this.snackBar.open(value);\r\n  }\r\n}\r\n","<div class=\"container\" >\r\n    <div class=\"item\">\r\n        <div class=\"title\">\r\n            <span>\r\n                Search\r\n            </span>\r\n            <span>\r\n                d_evs\r\n            </span>\r\n        </div>\r\n        <app-input-search (words)=\"onGetWords($event)\" [isLoading]=\"isLoading\"></app-input-search>\r\n    </div>\r\n</div>\r\n\r\n  \r\n  \r\n\r\n    \r\n  \r\n\r\n \r\n  ","<div class=\"container\">\r\n    <header>\r\n        <section>\r\n            <span>\r\n                Search\r\n            </span>\r\n            <span>\r\n                d_evs\r\n            </span>\r\n        </section>\r\n        <section>\r\n            <app-input-search (words)=\"onGetWords($event)\" [hasButton]=\"false\"></app-input-search>\r\n        </section>\r\n        <section>\r\n\r\n        </section>\r\n    </header>\r\n    <nav class=\"sidebar\">\r\n        <mat-card [ngStyle]=\"{ 'background-color': 'var(---secondary-color)' }\">\r\n            <mat-card-content>\r\n                <section class=\"profile\">\r\n                    <div>\r\n                        <img [src]=\"user.avatar_url\" >\r\n                    </div>\r\n                    <div class=\"name\">\r\n                        <p>\r\n                            {{user.name}}\r\n                        </p>\r\n                        <p>\r\n                           Descrição...\r\n                        </p>\r\n                    </div>\r\n                    \r\n\r\n                </section>\r\n                <section class=\"desc\">\r\n\r\n                </section>\r\n                <section class=\"links\">\r\n\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </nav>\r\n    <main>\r\n      <section>\r\n        <div class=\"content\" *ngFor=\"let repo of repos\">\r\n            <p><a href=\"{{repo.html_url}}\" target=\"_blank\">{{repo.name}}</a></p>\r\n            <p>{{repo.description??''}}</p>\r\n            <p></p>\r\n\r\n        </div>\r\n      </section>  \r\n    </main>\r\n</div>\r\n  ","import { Component, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RepoModel } from 'src/app/models/repo.model';\r\nimport { UserModel } from 'src/app/models/user.model';\r\nimport { GitHubService } from 'src/app/services/github.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.scss']\r\n})\r\nexport class UserDetailComponent implements OnInit{\r\n\r\n  constructor(\r\n    public githubService:GitHubService,\r\n    private router:Router,\r\n  ){}\r\n\r\n  ngOnInit(){\r\n    if(this.githubService.repos==undefined||this.githubService.user==undefined)\r\n      this.router.navigate(['/']);\r\n\r\n      console.log(this.githubService.user);\r\n    \r\n  }\r\n  onGetWords(value:string){\r\n   console.log(value)\r\n    \r\n  }\r\n\r\n  get user():UserModel {\r\n    return this.githubService.user as UserModel;\r\n  }\r\n\r\n  get repos():Array<RepoModel> {\r\n    let data = this.githubService.repos!=undefined?this.githubService.repos:[];\r\n    let r:Array<RepoModel> = [];\r\n    r = data;\r\n    return r;\r\n  }\r\n\r\n}\r\n","import { GenericResultCommand } from 'src/app/commands/core/generic-result.command';\r\nimport { Injectable, Injector, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Entity } from 'src/app/models/core/entity.model';\r\n\r\nimport { HeaderUtil } from 'src/app/utils/header.util';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport abstract class ServiceBase<T extends Entity> {\r\n\r\n  protected http: HttpClient;\r\n  protected apiUrl: string\r\n\r\n  constructor(\r\n    @Inject(String) protected endpoint: string,\r\n    protected injector: Injector\r\n  ) {\r\n    this.http = this.injector.get(HttpClient);\r\n    this.apiUrl = `${environment.apiUrl}${endpoint}`;\r\n  }\r\n\r\n  getAll(endpoint: string): Observable<GenericResultCommand> {\r\n    return this.http.get<GenericResultCommand>(endpoint, { headers: HeaderUtil.get() });\r\n  }\r\n\r\n  getById(endpoint: string = this.apiUrl): Observable<GenericResultCommand> {\r\n    return this.http.get<GenericResultCommand>(endpoint, { headers: HeaderUtil.get() });\r\n  }\r\n\r\n  post(endpoint: string, resource: T): Observable<GenericResultCommand> {\r\n    return this.http.post<GenericResultCommand>(endpoint, resource, { headers: HeaderUtil.get() });\r\n  }\r\n\r\n  put(endpoint: string, resource: T): Observable<GenericResultCommand> {\r\n    return this.http.put<GenericResultCommand>(endpoint, resource, { headers: HeaderUtil.get() });\r\n  }\r\n\r\n  delete(endpoint: string): Observable<GenericResultCommand> {\r\n    return this.http.delete<GenericResultCommand>(endpoint, { headers: HeaderUtil.get() });\r\n  }\r\n\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GenericResultCommand } from '../commands/core/generic-result.command';\r\nimport { ServiceBase } from './core/service-base.service';\r\nimport { UserModel } from '../models/user.model';\r\nimport { RepoModel } from '../models/repo.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GitHubService extends ServiceBase<any>{\r\n  public user?:UserModel;\r\n  public repos:Array<RepoModel>=[];\r\n  constructor(\r\n    protected override injector: Injector\r\n  ) {\r\n    super('',injector);\r\n   \r\n  }\r\n  getUsers(username:string):Observable<GenericResultCommand>{\r\n    return super.getAll(`${this.apiUrl}/users/${username}`);\r\n  }\r\n  getRepos(username:string):Observable<GenericResultCommand>{\r\n    return super.getAll(`${this.apiUrl}/users/${username}/repos`);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthStorage } from 'src/app/shared/storage/auth.storage';\r\nimport { environment } from \"src/environments/environment.development\";\r\n\r\n\r\n/** Pass untouched request through to the next request handler. */\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = AuthStorage.getToken();\r\n    const app = environment.app\r\n    const requestURL: Array<any> = request.url.split(\"/\");\r\n    const apiUrl: Array<any> = environment.apiUrl.split(\"/\");\r\n    if (token && requestURL[2] === apiUrl[2]) {\r\n      const newRequest = request.clone({\r\n        setHeaders: { Authorization: `Bearer ${token}`, app: app,}\r\n      });\r\n      return next.handle(newRequest);\r\n    } else {\r\n      const newRequest = request.clone({\r\n        setHeaders: {  }\r\n      });\r\n      return next.handle(newRequest);\r\n    }\r\n  }\r\n\r\n}\r\n","import { UserModel } from 'src/app/models/user.model';\r\nimport { CryptographyUtil } from 'src/app/utils/cryptography/cryptography.util';\r\n\r\n\r\nexport class AuthStorage {\r\n\r\n  private static userStorageKey = 'key.user';\r\n  private static tokenStorageKey = 'key.token';\r\n\r\n  public static setUser(user: UserModel) {\r\n    localStorage.setItem(this.userStorageKey, CryptographyUtil.encrypt(user));\r\n  }\r\n  \r\n  public static getUser() {\r\n    const data = localStorage.getItem(this.userStorageKey);\r\n    const decrypted = CryptographyUtil.decrypt(data);\r\n\r\n    return decrypted ? decrypted : null;\r\n  }\r\n  \r\n  public static removeUser(): void {\r\n    localStorage.removeItem(this.userStorageKey);\r\n  }\r\n  \r\n  public static setToken(token: string) {\r\n    localStorage.setItem(this.tokenStorageKey, CryptographyUtil.encrypt(token));\r\n  }\r\n  \r\n  public static getToken(): string {\r\n    const data = localStorage.getItem(this.tokenStorageKey);\r\n    const decrypted = CryptographyUtil.decrypt(data);\r\n    \r\n    return decrypted ? decrypted : null;\r\n  }\r\n\r\n  public static removeToken(): void {\r\n    localStorage.removeItem(this.tokenStorageKey);\r\n  }\r\n\r\n  public static isAuthenticated(): boolean {\r\n    return AuthStorage.getToken() != null;\r\n  }\r\n\r\n  public static clear() {\r\n    localStorage.clear();\r\n  }\r\n\r\n}\r\n","export class CryptographyUtil {\r\n\r\n    public static encrypt(value: any): any {\r\n      if (!value)\r\n        return null;\r\n  \r\n      const data = JSON.stringify(value);\r\n      return btoa(data);\r\n    }\r\n  \r\n    public static decrypt(value: any): any {\r\n      if (!value)\r\n        return null;\r\n  \r\n      const data = atob(value);\r\n      return JSON.parse(data);\r\n    }\r\n  \r\n  }\r\n  ","\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\n\r\nexport class HeaderUtil {\r\n\r\n    public static get(): HttpHeaders {\r\n        const headers = new HttpHeaders()\r\n            .set('Accept', 'application/json')\r\n            .set('Content-Type', 'application/json')\r\n        return headers;\r\n    }\r\n}\r\n","export const environment = {\r\n    apiUrl: 'https://api.github.com',\r\n    apiStorage: '',\r\n    app: '',\r\n\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","SearchComponent","UserDetailComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","LOCALE_ID","BrowserAnimationsModule","BrowserModule","MatToolbarModule","MatIconModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatMenuModule","MatCardModule","FormsModule","MatProgressSpinnerModule","MAT_SNACK_BAR_DEFAULT_OPTIONS","MatSnackBarModule","HTTP_INTERCEPTORS","HttpClientModule","TokenInterceptor","InputSearchComponent","AppModule","bootstrap","provide","useClass","multi","useValue","duration","panelClass","declarations","EventEmitter","ngOnChanges","isLoading","valueInputData","searchValueInput","length","hasButton","words","emit","onGetWords","inputs","outputs","features","consts","ctx","forkJoin","router","snackBar","githubService","value","user","getUsers","repos","getRepos","subscribe","next","navigate","error","err","openSnackbar","open","ngOnInit","undefined","console","log","data","r","HttpClient","HeaderUtil","environment","ServiceBase","endpoint","injector","http","get","apiUrl","getAll","headers","getById","post","resource","put","delete","String","factory","providedIn","GitHubService","username","AuthStorage","intercept","request","token","getToken","app","requestURL","url","split","newRequest","clone","setHeaders","Authorization","handle","CryptographyUtil","setUser","localStorage","setItem","userStorageKey","encrypt","getUser","getItem","decrypted","decrypt","removeUser","removeItem","setToken","tokenStorageKey","removeToken","isAuthenticated","clear","JSON","stringify","btoa","atob","parse","HttpHeaders","set","apiStorage","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}