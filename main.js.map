{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/input-search/input-search.component.ts","./src/app/components/input-search/input-search.component.html","./src/app/pages/search/search.component.ts","./src/app/pages/search/search.component.html","./src/app/pages/user-detail/user-detail.component.ts","./src/app/pages/user-detail/user-detail.component.html","./src/app/services/core/service-base.service.ts","./src/app/services/github.service.ts","./src/app/services/interceptors/token.interceptor.ts","./src/app/shared/storage/auth.storage.ts","./src/app/utils/cryptography/cryptography.util.ts","./src/app/utils/header.util.ts","./src/app/utils/image_paths.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchComponent } from './pages/search/search.component';\nimport { UserDetailComponent } from './pages/user-detail/user-detail.component';\n\nconst routes: Routes = [\n  { path: '',component:SearchComponent},\n  { path: 'detail', component:UserDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'searchdev';\n  \n}\n","<router-outlet></router-outlet>","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { TokenInterceptor } from './services/interceptors/token.interceptor';\nimport { SearchComponent } from './pages/search/search.component';\nimport { UserDetailComponent } from './pages/user-detail/user-detail.component';\nimport { InputSearchComponent } from './components/input-search/input-search.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    UserDetailComponent,\n    InputSearchComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatCardModule,\n    \n  ],\n \n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    { provide: LOCALE_ID, useValue: 'pt-BR' },\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: {duration: 3000,panelClass: ['danger-snackbar']}},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component,EventEmitter,Output,Input,HostListener} from '@angular/core';\n\n@Component({\n  selector: 'app-input-search',\n  templateUrl: './input-search.component.html',\n  styleUrls: ['./input-search.component.scss']\n})\nexport class InputSearchComponent{\n  @Output() words: EventEmitter<string> = new EventEmitter();\n  @Input() isLoading: boolean=false;\n  @Input() hasButton: boolean=true;\n  searchValueInput!: string | null;\n\n  \n\n  valueInputData(input:string): void\n  {\n    this.searchValueInput=input;\n    if(this.searchValueInput!=null&&this.searchValueInput.length>2&&!this.hasButton)\n      this.words.emit(this.searchValueInput);\n  }\n  onGetWords(): void \n  {\n    if(this.searchValueInput!=null)\n    this.words.emit(this.searchValueInput);\n  }\n  onKeyDown(event: KeyboardEvent): void \n  {\n    console.log(event);\n    if(this.searchValueInput!=null)this.words.emit(this.searchValueInput);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"input-group\">\n        <div class=\"search-icon\">\n            <mat-icon>search</mat-icon>\n        </div>\n        <input type=\"text\" placeholder=\"Search\" #searchValueInput (keyup)=\"valueInputData(searchValueInput.value)\"/>\n    </div>\n    <button mat-raised-button color=\"primary\" class=\"custom-button\" (click)=\"onGetWords()\" *ngIf=\"!isLoading&&hasButton\">Search</button>\n    <mat-spinner *ngIf=\"isLoading&&hasButton\"></mat-spinner>\n\n</div>\n","import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { forkJoin, of } from 'rxjs';\nimport { GitHubService } from 'src/app/services/github.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent {\n  \n  isLoading:boolean=false;\n  \n  constructor(\n    private router:Router,\n    private snackBar: MatSnackBar,\n    private githubService:GitHubService\n  ){}\n\n  onGetWords(value:string){\n    this.isLoading=true;\n   \n    forkJoin({\n      user:this.githubService.getUsers(value),\n      repos:this.githubService.getRepos(value)\n    }).subscribe({\n      next:(value:any)=>{\n        this.githubService.user = value.user;\n        this.githubService.repos = value.repos;\n        this.isLoading=false;\n        this.router.navigate(['/detail']);\n      },\n      error:(err:any)=>{\n        this.openSnackbar(`Ops! usuário ${value} não encontrado`);\n        console.log(err);\n        this.isLoading=false;\n      }\n\n    })\n    \n    \n  }\n  openSnackbar(value:string){\n    this.snackBar.open(value);\n  }\n}\n","<div class=\"container\" >\n    <div class=\"item\">\n        <div class=\"title\">\n            <span>\n                Search\n            </span>\n            <span>\n                d_evs\n            </span>\n        </div>\n        <app-input-search (words)=\"onGetWords($event)\" [isLoading]=\"isLoading\"></app-input-search>\n    </div>\n</div>\n\n  \n  \n\n    \n  \n\n \n  ","import { DatePipe, registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\nimport { Component, LOCALE_ID, OnInit} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport {forkJoin,Subject,switchMap,debounceTime,of,distinctUntilChanged} from 'rxjs';\nimport { RepoModel } from 'src/app/models/repo.model';\nimport { UserModel } from 'src/app/models/user.model';\nimport { GitHubService } from 'src/app/services/github.service';\nimport { ImagePaths } from 'src/app/utils/image_paths';\n\nregisterLocaleData(localePt);\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss'],\n  providers: [\n    DatePipe,\n    { provide: LOCALE_ID, useValue: 'pt-BR' }\n  ],\n})\nexport class UserDetailComponent implements OnInit{\n \n  public isSearch:boolean =false;\n  public login:string ='';\n  public twitter:string = '';//icon\n  public office:string = '';//icon\n  public flowers:string = '';//icon\n  public heart:string = '';//icon\n  public map:string = '';//icon\n  public email:string = '';//icon\n  public star:string = '';//icon\n  private subJectSearch: Subject<string> = new Subject<string>();\n  constructor(\n    public githubService:GitHubService,\n    private router:Router,\n    private snackBar: MatSnackBar,\n    private datePipe: DatePipe\n  ){\n    this.twitter= ImagePaths.twitter_icon;\n    this.office= ImagePaths.office_work;\n    this.heart= ImagePaths.heart;\n    this.flowers= ImagePaths.group;\n    this.map= ImagePaths.map_pointer;\n    this.email= ImagePaths.email;\n    this.star= ImagePaths.star;\n  }\n\n  ngOnInit(){\n    let userName: string = this.githubService.user?.login!;\n    let repoName: string = '';\n    this.subJectSearch.pipe(\n      debounceTime(1000),\n      distinctUntilChanged(),\n      switchMap((value:string) => {\n        repoName = value;\n        console.log(value)\n        if(value.length === 0){\n          return of(this.githubService.repos)\n        }\n        return forkJoin({\n          repos:this.githubService.getRepos(userName)\n        });\n    }))\n    .subscribe({\n      next:(value:any)=>{\n        \n        let r = new RegExp(repoName,'i');\n          let filter = value.repos.filter(\n                (repo: RepoModel ) => r.test(repo.name)\n            );\n          this.githubService.repos = filter.length>0?filter:value.repos;\n        \n        \n      },\n      error:(err:any)=>{\n        console.log(err);\n        this.openSnackbar(`Ops! usuário ${userName} não encontrado`);\n        \n      }\n\n    });\n    if(this.githubService.repos==undefined||this.githubService.user==undefined)\n      this.router.navigate(['/']);\n      this.login=`@${this.githubService.user?.login??''}`;\n      \n    \n  }\n  onGetWords(value:string)\n  {\n    console.log(value)\n      this.subJectSearch.next(value)\n  }\n  openSnackbar(value:string){\n    this.snackBar.open(value);\n  }\n\n  get user():UserModel {\n    return this.githubService.user as UserModel;\n  }\n\n  get repos():Array<RepoModel> {\n    let data = this.githubService.repos!=undefined?this.githubService.repos:[];\n    let r:Array<RepoModel> = [];\n    r = data;\n    return r;\n  }\n\n  openTwitter(value:string) {\n    window.open(`https://twitter.com/${value}`, '_blank');\n  }\n  openBlog(value:string) {\n    window.open(`https://${value}`, '_blank');\n  }\n  updated(timestamp: string): string {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMs = now.getTime() - date.getTime();\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\n  \n    if (diffInDays === 0) {\n      const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));\n      if (diffInHours === 0) {\n        const diffInMinutes = Math.floor(diffInMs / (1000 * 60));\n        return `Atualizado há ${diffInMinutes} minutos.`;\n      }\n      return `Atualizado há ${diffInHours} horas.`;\n    }\n  \n    const weeks = Math.floor(diffInDays / 7);\n    const remainingDays = diffInDays % 7;\n  \n    if (weeks === 0) {\n      return `Atualizado há ${remainingDays} dias.`;\n    } else if (weeks === 1) {\n      return 'Atualizado na última semana.';\n    } else if (weeks === 2) {\n      return 'Atualizado há 2 semanas.';\n    } else if (remainingDays === 0) {\n      return `Atualizado há ${weeks} semanas.`;\n    }\n  \n    const formattedDate = this.datePipe.transform(date, 'MMM d, yyyy');\n    return `Atualizado em ${formattedDate}.`;\n  }\n  /* updated(timestamp: string): string {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMs = now.getTime() - date.getTime();\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\n  \n    const formattedDate = this.datePipe.transform(date, 'dd/MM/yyyy');\n  \n    return `Atualizado em ${formattedDate}, há ${diffInDays} dias.`;\n  } */\n  /* updated(timestamp:string):string{\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMs = now.getTime() - date.getTime();\n    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\n\n    return `Atualizado há ${diffInDays} dias.`;\n  } */\n\n}\n","<div class=\"container\">\n    <header>\n        <section routerLink=\"/\" class=\"logo\">\n            <span>\n                Search\n            </span>\n            <span>\n                d_evs\n            </span>\n        </section>\n        <section>\n            <app-input-search (words)=\"onGetWords($event)\" [hasButton]=\"false\"></app-input-search>\n        </section>\n        <section>\n            \n        </section>\n    </header>\n    <nav class=\"sidebar\">\n        <mat-card [ngStyle]=\"{ 'background-color': 'var(---secondary-color)' }\">\n            <mat-card-content>\n                <section class=\"profile\">\n                    <div *ngIf=\"user.avatar_url\">\n                        <img [src]=\"user.avatar_url\" >\n                    </div>\n                    <div class=\"name\">\n                        <b>\n                            {{user.name}}\n                        </b>\n                        <div class=\"profile-login\">\n                            {{login}}\n                        </div>\n                    </div>\n                    \n\n                </section>\n                <section class=\"desc\">\n                   <p>\n                    {{user.bio??''}}\n                   </p>\n                </section>\n                <section class=\"links\">\n                    <ul>\n                        <li *ngIf=\"user.followers\">\n                            <img [src]=\"flowers\" alt=\"\">\n                            {{user.followers}} seguidores\n                        </li>\n                        <li *ngIf=\"user.following\">\n                            <img [src]=\"heart\" alt=\"\">\n                            {{user.following}} seguindo\n                        </li>\n                        <li *ngIf=\"user.company\" >\n                            <img [src]=\"office\" alt=\"\">\n                            {{user.company}}\n                        </li>\n                        <li *ngIf=\"user.email\">\n                            <img [src]=\"email\" alt=\"\">\n                            {{user.email}}\n                        </li>\n                        <li *ngIf=\"user.blog\" style=\"cursor: pointer;\" >\n                            <mat-icon class=\"material-icons\">share</mat-icon>\n\n                            <span (click)=\"openBlog(user.blog)\">{{' '+user.blog}}</span>\n                        </li>\n                        <li *ngIf=\"user.twitter_username\"  style=\"cursor: pointer;\">\n                            <img [src]=\"twitter\" alt=\"\">\n                            <span (click)=\"openTwitter(user.twitter_username)\">\n\n                                @{{user.twitter_username}}\n                            </span>\n                        </li>\n                        \n                    </ul>\n                </section>\n            </mat-card-content>\n        </mat-card>\n    </nav>\n    <main>\n      <section>\n        <div class=\"content\" *ngFor=\"let repo of repos\">\n            <p class=\"repo-title\" style=\"font-size: 20px;\"><a href=\"{{repo.html_url}}\" target=\"_blank\" >{{repo.name}}</a></p>\n            <p>{{repo.description??''}}</p>\n            <div class=\"ftitle\" style=\"width: 20rem;display: flex;justify-content: space-around;\">\n                <span class=\"att-info\">\n                    <img [src]=\"star\" alt=\"\">\n                    {{repo.stargazers_count}}\n                </span> \n                <span class=\"att-info\">\n                    {{updated(repo.updated_at)}}\n                </span>\n            </div>\n\n        </div>\n      </section>  \n    </main>\n</div>\n  ","import { GenericResultCommand } from 'src/app/commands/core/generic-result.command';\nimport { Injectable, Injector, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Entity } from 'src/app/models/core/entity.model';\n\nimport { HeaderUtil } from 'src/app/utils/header.util';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class ServiceBase<T extends Entity> {\n\n  protected http: HttpClient;\n  protected apiUrl: string\n\n  constructor(\n    @Inject(String) protected endpoint: string,\n    protected injector: Injector\n  ) {\n    this.http = this.injector.get(HttpClient);\n    this.apiUrl = `${environment.apiUrl}${endpoint}`;\n  }\n\n  getAll(endpoint: string): Observable<GenericResultCommand> {\n    return this.http.get<GenericResultCommand>(endpoint, { headers: HeaderUtil.get() });\n  }\n\n  getById(endpoint: string = this.apiUrl): Observable<GenericResultCommand> {\n    return this.http.get<GenericResultCommand>(endpoint, { headers: HeaderUtil.get() });\n  }\n\n  post(endpoint: string, resource: T): Observable<GenericResultCommand> {\n    return this.http.post<GenericResultCommand>(endpoint, resource, { headers: HeaderUtil.get() });\n  }\n\n  put(endpoint: string, resource: T): Observable<GenericResultCommand> {\n    return this.http.put<GenericResultCommand>(endpoint, resource, { headers: HeaderUtil.get() });\n  }\n\n  delete(endpoint: string): Observable<GenericResultCommand> {\n    return this.http.delete<GenericResultCommand>(endpoint, { headers: HeaderUtil.get() });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GenericResultCommand } from '../commands/core/generic-result.command';\nimport { ServiceBase } from './core/service-base.service';\nimport { UserModel } from '../models/user.model';\nimport { RepoModel } from '../models/repo.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitHubService extends ServiceBase<any>{\n  public user?:UserModel;\n  public repos:Array<RepoModel>=[];\n  constructor(\n    protected override injector: Injector\n  ) {\n    super('',injector);\n   \n  }\n  getUsers(username:string):Observable<GenericResultCommand>{\n    return super.getAll(`${this.apiUrl}/users/${username}`);\n  }\n  getRepos(username:string):Observable<GenericResultCommand>{\n    return super.getAll(`${this.apiUrl}/users/${username}/repos?direction=asc`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { AuthStorage } from 'src/app/shared/storage/auth.storage';\nimport { environment } from \"src/environments/environment.development\";\n\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = AuthStorage.getToken();\n    const app = environment.app\n    const requestURL: Array<any> = request.url.split(\"/\");\n    const apiUrl: Array<any> = environment.apiUrl.split(\"/\");\n    if (token && requestURL[2] === apiUrl[2]) {\n      const newRequest = request.clone({\n        setHeaders: { Authorization: `Bearer ${token}`, app: app,}\n      });\n      return next.handle(newRequest);\n    } else {\n      const newRequest = request.clone({\n        setHeaders: {  }\n      });\n      return next.handle(newRequest);\n    }\n  }\n\n}\n","import { UserModel } from 'src/app/models/user.model';\nimport { CryptographyUtil } from 'src/app/utils/cryptography/cryptography.util';\n\n\nexport class AuthStorage {\n\n  private static userStorageKey = 'key.user';\n  private static tokenStorageKey = 'key.token';\n\n  public static setUser(user: UserModel) {\n    localStorage.setItem(this.userStorageKey, CryptographyUtil.encrypt(user));\n  }\n  \n  public static getUser() {\n    const data = localStorage.getItem(this.userStorageKey);\n    const decrypted = CryptographyUtil.decrypt(data);\n\n    return decrypted ? decrypted : null;\n  }\n  \n  public static removeUser(): void {\n    localStorage.removeItem(this.userStorageKey);\n  }\n  \n  public static setToken(token: string) {\n    localStorage.setItem(this.tokenStorageKey, CryptographyUtil.encrypt(token));\n  }\n  \n  public static getToken(): string {\n    const data = localStorage.getItem(this.tokenStorageKey);\n    const decrypted = CryptographyUtil.decrypt(data);\n    \n    return decrypted ? decrypted : null;\n  }\n\n  public static removeToken(): void {\n    localStorage.removeItem(this.tokenStorageKey);\n  }\n\n  public static isAuthenticated(): boolean {\n    return AuthStorage.getToken() != null;\n  }\n\n  public static clear() {\n    localStorage.clear();\n  }\n\n}\n","export class CryptographyUtil {\n\n    public static encrypt(value: any): any {\n      if (!value)\n        return null;\n  \n      const data = JSON.stringify(value);\n      return btoa(data);\n    }\n  \n    public static decrypt(value: any): any {\n      if (!value)\n        return null;\n  \n      const data = atob(value);\n      return JSON.parse(data);\n    }\n  \n  }\n  ","\nimport { HttpHeaders } from \"@angular/common/http\";\n\nexport class HeaderUtil {\n\n    public static get(): HttpHeaders {\n        const headers = new HttpHeaders()\n            .set('Accept', 'application/json')\n            .set('Content-Type', 'application/json')\n        return headers;\n    }\n}\n","export class ImagePaths {\n    static readonly email = 'assets/img/logo.png';\n    static readonly group = 'assets/img/group.png';\n    static readonly heart = 'assets/img/heart.png';\n    static readonly map_pointer = 'assets/img/Navigation-Maps.png';\n    static readonly office_work = 'assets/img/office-work-square.png';\n    static readonly twitter_icon= 'assets/img/shape.png';\n    static readonly star= 'assets/img/star.png';\n  }\n  ","export const environment = {\n    apiUrl: 'https://api.github.com',\n    apiStorage: '',\n    app: '',\n\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","SearchComponent","UserDetailComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","LOCALE_ID","BrowserAnimationsModule","BrowserModule","MatToolbarModule","MatIconModule","MatFormFieldModule","MatInputModule","MatButtonModule","MatMenuModule","MatCardModule","FormsModule","MatProgressSpinnerModule","MAT_SNACK_BAR_DEFAULT_OPTIONS","MatSnackBarModule","HTTP_INTERCEPTORS","HttpClientModule","TokenInterceptor","InputSearchComponent","AppModule","bootstrap","provide","useClass","multi","useValue","duration","panelClass","declarations","EventEmitter","valueInputData","input","searchValueInput","length","hasButton","words","emit","onGetWords","onKeyDown","event","console","log","inputs","isLoading","outputs","consts","forkJoin","router","snackBar","githubService","value","user","getUsers","repos","getRepos","subscribe","next","navigate","error","err","openSnackbar","open","ctx","DatePipe","registerLocaleData","localePt","Subject","switchMap","debounceTime","of","distinctUntilChanged","ImagePaths","datePipe","twitter","twitter_icon","office","office_work","heart","flowers","group","map","map_pointer","email","star","ngOnInit","userName","login","repoName","subJectSearch","pipe","r","RegExp","filter","repo","test","name","undefined","data","openTwitter","window","openBlog","updated","timestamp","date","Date","now","diffInMs","getTime","diffInDays","Math","floor","diffInHours","diffInMinutes","weeks","remainingDays","formattedDate","transform","features","HttpClient","HeaderUtil","environment","ServiceBase","endpoint","injector","http","get","apiUrl","getAll","headers","getById","post","resource","put","delete","String","factory","providedIn","GitHubService","username","AuthStorage","intercept","request","token","getToken","app","requestURL","url","split","newRequest","clone","setHeaders","Authorization","handle","CryptographyUtil","setUser","localStorage","setItem","userStorageKey","encrypt","getUser","getItem","decrypted","decrypt","removeUser","removeItem","setToken","tokenStorageKey","removeToken","isAuthenticated","clear","JSON","stringify","btoa","atob","parse","HttpHeaders","set","apiStorage","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}